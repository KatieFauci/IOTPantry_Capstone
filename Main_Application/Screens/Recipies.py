#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 09, 2020 12:27:18 AM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Recipies_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Recipies_support.set_Tk_var()
    top = Toplevel1 (root)
    Recipies_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    Recipies_support.set_Tk_var()
    top = Toplevel1 (w)
    Recipies_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1173x873+319+95")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.canvas_base = tk.Canvas(top)
        self.canvas_base.place(relx=0.06, rely=0.126, relheight=0.687
                , relwidth=0.873)
        self.canvas_base.configure(background="#3e3c55")
        self.canvas_base.configure(borderwidth="2")
        self.canvas_base.configure(highlightbackground="#d9d9d9")
        self.canvas_base.configure(highlightcolor="black")
        self.canvas_base.configure(insertbackground="black")
        self.canvas_base.configure(relief="ridge")
        self.canvas_base.configure(selectbackground="blue")
        self.canvas_base.configure(selectforeground="white")

        self.button_Inventory = tk.Button(self.canvas_base)
        self.button_Inventory.place(relx=0.0, rely=0.0, height=50, width=341)
        self.button_Inventory.configure(activebackground="#ececec")
        self.button_Inventory.configure(activeforeground="#000000")
        self.button_Inventory.configure(background="#d9d9d9")
        self.button_Inventory.configure(disabledforeground="#a3a3a3")
        self.button_Inventory.configure(foreground="#000000")
        self.button_Inventory.configure(highlightbackground="#d9d9d9")
        self.button_Inventory.configure(highlightcolor="black")
        self.button_Inventory.configure(pady="0")
        self.button_Inventory.configure(relief="ridge")
        self.button_Inventory.configure(text='''Inventory''')

        self.button_shoplist = tk.Button(self.canvas_base)
        self.button_shoplist.place(relx=0.332, rely=0.0, height=50, width=342)
        self.button_shoplist.configure(activebackground="#ececec")
        self.button_shoplist.configure(activeforeground="#000000")
        self.button_shoplist.configure(background="#d9d9d9")
        self.button_shoplist.configure(disabledforeground="#a3a3a3")
        self.button_shoplist.configure(foreground="#000000")
        self.button_shoplist.configure(highlightbackground="#d9d9d9")
        self.button_shoplist.configure(highlightcolor="black")
        self.button_shoplist.configure(pady="0")
        self.button_shoplist.configure(relief="ridge")
        self.button_shoplist.configure(text='''Shopping List''')

        self.button_recipies = tk.Button(self.canvas_base)
        self.button_recipies.place(relx=0.664, rely=0.0, height=50, width=341)
        self.button_recipies.configure(activebackground="#ececec")
        self.button_recipies.configure(activeforeground="#000000")
        self.button_recipies.configure(background="#d9d9d9")
        self.button_recipies.configure(disabledforeground="#a3a3a3")
        self.button_recipies.configure(foreground="#000000")
        self.button_recipies.configure(highlightbackground="#d9d9d9")
        self.button_recipies.configure(highlightcolor="black")
        self.button_recipies.configure(pady="0")
        self.button_recipies.configure(relief="ridge")
        self.button_recipies.configure(text='''Recipies''')

        self.entry_barcode = tk.Entry(self.canvas_base)
        self.entry_barcode.place(relx=0.801, rely=0.933, height=20
                , relwidth=0.082)
        self.entry_barcode.configure(background="white")
        self.entry_barcode.configure(disabledforeground="#a3a3a3")
        self.entry_barcode.configure(font="TkFixedFont")
        self.entry_barcode.configure(foreground="#000000")
        self.entry_barcode.configure(highlightbackground="#d9d9d9")
        self.entry_barcode.configure(highlightcolor="black")
        self.entry_barcode.configure(insertbackground="black")
        self.entry_barcode.configure(selectbackground="blue")
        self.entry_barcode.configure(selectforeground="white")

        self.button_in = tk.Button(self.canvas_base)
        self.button_in.place(relx=0.802, rely=0.917, height=50, width=100)
        self.button_in.configure(activebackground="#ececec")
        self.button_in.configure(activeforeground="#000000")
        self.button_in.configure(background="#36a35c")
        self.button_in.configure(disabledforeground="#a3a3a3")
        self.button_in.configure(foreground="#000000")
        self.button_in.configure(highlightbackground="#d9d9d9")
        self.button_in.configure(highlightcolor="black")
        self.button_in.configure(pady="0")
        self.button_in.configure(text='''Scan In''')

        self.button_out = tk.Button(self.canvas_base)
        self.button_out.place(relx=0.899, rely=0.917, height=50, width=100)
        self.button_out.configure(activebackground="#ececec")
        self.button_out.configure(activeforeground="#000000")
        self.button_out.configure(background="#af0101")
        self.button_out.configure(disabledforeground="#a3a3a3")
        self.button_out.configure(foreground="#000000")
        self.button_out.configure(highlightbackground="#d9d9d9")
        self.button_out.configure(highlightcolor="black")
        self.button_out.configure(pady="0")
        self.button_out.configure(text='''Scan Out''')

        self.entry_addShopList = tk.Entry(self.canvas_base)
        self.entry_addShopList.place(relx=0.039, rely=0.933, height=20
                , relwidth=0.248)
        self.entry_addShopList.configure(background="white")
        self.entry_addShopList.configure(disabledforeground="#a3a3a3")
        self.entry_addShopList.configure(font="TkFixedFont")
        self.entry_addShopList.configure(foreground="#000000")
        self.entry_addShopList.configure(highlightbackground="#d9d9d9")
        self.entry_addShopList.configure(highlightcolor="black")
        self.entry_addShopList.configure(insertbackground="black")
        self.entry_addShopList.configure(selectbackground="blue")
        self.entry_addShopList.configure(selectforeground="white")

        self.button_addShopList = tk.Button(self.canvas_base)
        self.button_addShopList.place(relx=0.303, rely=0.933, height=24
                , width=200)
        self.button_addShopList.configure(activebackground="#ececec")
        self.button_addShopList.configure(activeforeground="#000000")
        self.button_addShopList.configure(background="#d9d9d9")
        self.button_addShopList.configure(disabledforeground="#a3a3a3")
        self.button_addShopList.configure(foreground="#000000")
        self.button_addShopList.configure(highlightbackground="#d9d9d9")
        self.button_addShopList.configure(highlightcolor="black")
        self.button_addShopList.configure(pady="0")
        self.button_addShopList.configure(text='''Add To Shopping List''')

        self.frame_rec_menu = tk.Frame(self.canvas_base)
        self.frame_rec_menu.place(relx=0.0, rely=0.083, relheight=0.083
                , relwidth=1.0)
        self.frame_rec_menu.configure(relief='groove')
        self.frame_rec_menu.configure(borderwidth="2")
        self.frame_rec_menu.configure(relief="groove")
        self.frame_rec_menu.configure(background="#737373")

        self.TCombobox1 = ttk.Combobox(self.frame_rec_menu)
        self.TCombobox1.place(relx=0.596, rely=0.3, relheight=0.42
                , relwidth=0.146)
        self.TCombobox1.configure(textvariable=Recipies_support.combobox)
        self.TCombobox1.configure(takefocus="")

        self.TCombobox2 = ttk.Combobox(self.frame_rec_menu)
        self.TCombobox2.place(relx=0.752, rely=0.3, relheight=0.42
                , relwidth=0.142)
        self.TCombobox2.configure(textvariable=Recipies_support.combobox)
        self.TCombobox2.configure(takefocus="")

        self.Button1 = tk.Button(self.frame_rec_menu)
        self.Button1.place(relx=0.908, rely=0.3, height=24, width=75)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Filter''')

        self.frame_rec_main = tk.Frame(self.canvas_base)
        self.frame_rec_main.place(relx=0.0, rely=0.167, relheight=0.75
                , relwidth=1.0)
        self.frame_rec_main.configure(relief='groove')
        self.frame_rec_main.configure(borderwidth="2")
        self.frame_rec_main.configure(relief="groove")
        self.frame_rec_main.configure(background="#585670")

        self.label_rec_name = tk.Label(self.frame_rec_main)
        self.label_rec_name.place(relx=0.186, rely=0.111, height=30, width=352)
        self.label_rec_name.configure(background="#939393")
        self.label_rec_name.configure(disabledforeground="#a3a3a3")
        self.label_rec_name.configure(foreground="#000000")
        self.label_rec_name.configure(text='''Name''')

        self.label_rec_time = tk.Label(self.frame_rec_main)
        self.label_rec_time.place(relx=0.586, rely=0.111, height=30, width=150)
        self.label_rec_time.configure(background="#939393")
        self.label_rec_time.configure(disabledforeground="#a3a3a3")
        self.label_rec_time.configure(foreground="#000000")
        self.label_rec_time.configure(text='''Time''')

        self.label_rec_timeDate = tk.Label(self.frame_rec_main)
        self.label_rec_timeDate.place(relx=0.586, rely=0.222, height=30
                , width=150)
        self.label_rec_timeDate.configure(background="#d9d9d9")
        self.label_rec_timeDate.configure(disabledforeground="#a3a3a3")
        self.label_rec_timeDate.configure(foreground="#000000")
        self.label_rec_timeDate.configure(text='''X''')

        self.button_rec_nameData = tk.Button(self.frame_rec_main)
        self.button_rec_nameData.place(relx=0.186, rely=0.222, height=30
                , width=350)
        self.button_rec_nameData.configure(activebackground="#ececec")
        self.button_rec_nameData.configure(activeforeground="#000000")
        self.button_rec_nameData.configure(background="#d9d9d9")
        self.button_rec_nameData.configure(cursor="fleur")
        self.button_rec_nameData.configure(disabledforeground="#a3a3a3")
        self.button_rec_nameData.configure(foreground="#000000")
        self.button_rec_nameData.configure(highlightbackground="#d9d9d9")
        self.button_rec_nameData.configure(highlightcolor="black")
        self.button_rec_nameData.configure(pady="0")
        self.button_rec_nameData.configure(relief="flat")
        self.button_rec_nameData.configure(text='''X''')

if __name__ == '__main__':
    vp_start_gui()





